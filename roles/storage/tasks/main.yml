---

#
# Install swift storage
# 

- name: install required packages for swift storage
  apt: pkg=$item state=installed update_cache=yes cache_valid_time=3600
  with_items:
    - swift-account 
    - swift-container 
    - swift-object 
    - xfsprogs 
    - parted

- name: make sure /srv/node exists
  file: path=/srv/node state=directory

- name: make sure /var/swift/recon exists
  file: path=/var/swift/recon state=directory owner=swift group=swift mode=0750

- name: check if losetup loop1 is already up
  #command: losetup /dev/loop1
  shell: mount | grep "loop1 "
  register: losetup
  ignore_errors: True

# XXX Must be a better way to iterate over these XXX
- name: cleanup image mounts
  shell: umount /srv/node/$item; losetup -d /dev/loop$item; rm -f /var/tmp/$item.img
  with_sequence: count=3
  when: "losetup.rc > 0"

# XXX Should be a module XXX
# XXX Should chwon swift:swift but prob yaml bug to use : XXX
- name: create and mount image files for swift storage
  shell: truncate --size 10G /var/tmp/{{ item }}.img; losetup /dev/loop{{ item }} /var/tmp/{{ item }}.img; mkfs.xfs -i size=1024 /dev/loop{{ item }}; mkdir /srv/node/{{ item }}; mount -o noatime,nodiratime,nobarrier /dev/loop$item /srv/node/{{ item }}; chown -R swift /srv/node/{{item}}
  with_sequence: count=3
  when: "losetup.rc > 0"

- name: copy over rsyncd.conf to swift storage
  template: src=rsyncd.conf.j2 dest=/etc/rsyncd.conf

- name: edit /etc/sysconfig/rsync
  lineinfile: dest=/etc/default/rsync regexp=^RSYNC_ENABLE line="RSYNC_ENABLE=true"

# XXX Should only restart if needed to XXX
- name: make sure rsync is running
  service: name=rsync state=started

#- name: make sure xinetd is running
#  service: name=xinetd state=running

# XXX Mode? XXX
- name: copy over *-server.conf files
  template: src=$item-server.conf.j2 dest=/etc/swift/$item-server.conf owner=swift group=swift mode=0644
  with_items:
    - account
    - container
    - object

#
# Run swift_ring_builder_add on each proxy
# 
#- name: build the ring by delegating to proxy nodes
#  swift_ring_builder_add: disks=3 region={{ region }} hostname={{ inventory_hostname }} zone={{ zone }}
#  delegate_to: "{{ item }}"
#  with_items: groups.proxy

- name: build account ring
  command: chdir=/etc/swift swift-ring-builder account.builder add r{{ region }}z{{ zone }}-{{ inventory_hostname }}:6002/{{ item }} 100
  delegate_to: 192.168.100.100
  with_sequence: count=3
  when: "losetup.rc > 0"

- name: build container ring
  command: chdir=/etc/swift swift-ring-builder container.builder add r{{ region }}z{{ zone }}-{{ inventory_hostname }}:6001/{{ item }} 100
  delegate_to: 192.168.100.100
  with_sequence: count=3
  when: "losetup.rc > 0"

- name: build object ring
  command: chdir=/etc/swift swift-ring-builder object.builder add r{{ region }}z{{ zone }}-{{ inventory_hostname }}:6002/{{ item }} 100
  delegate_to: 192.168.100.100
  with_sequence: count=3
  when: "losetup.rc > 0"

- name: rebalance rings
  command: chdir=/etc/swift swift-ring-builder {{ item }}.builder rebalance
  delegate_to: 192.168.100.100
  when: "losetup.rc > 0"
  with_items:
    - account
    - object
    - container

- name: Grab the resulting *.ring.gz files and put them on all proxy and storage nodes
  fetch: dest=fetch/{{ item }}.ring.gz flat=yes src=/etc/swift/{{ item }}.ring.gz
  with_items:
    - account
    - object
    - container
  delegate_to: 192.168.100.100
  when: "losetup.rc > 0"

- name: put the *.ring.gz files on all storage servers
  copy: src=fetch/{{ item }}.ring.gz dest=/etc/swift/{{item}}.ring.gz
  when: "losetup.rc > 0"
  with_items:
    - account
    - object
    - container

# XXX how to put the ring.gz files on the second proxy? XXX

# More delegating to proxy nodes...no this won't be confusing at all...but swift-proxy won't start
# without the ring.gz files that are created by adding devices...
- name: start swift-proxy on proxy nodes
  service: name=swift-proxy state=running
  delegate_to: "{{ item }}"
  with_items: groups.proxy

# XXX TODO - create fstab XXX

- name: restart swift-storage node services
  service: name=swift-{{ item }} state=restarted
  with_items:
    - object 
    - object-replicator
    - object-updater 
    - object
    - container 
    - container-replicator 
    - container-updater
    - container-auditor
    - account
    - account-replicator
    - account-reaper
    - account-auditor

# XXX FIX ME XXX
- name: restart syslog
  service: name=rsyslog state=restarted

# XXX FIX ME XXX
- name: restart memcached
  service: name=memcached state=restarted
